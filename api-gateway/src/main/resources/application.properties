#port where api-gateway will run
server.port=8080

#register with eureka
spring.application.name=api-gateway
#tells the location of eureka to register apigateway into it
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Enable detailed debug logging for Spring Cloud Gateway components.
# This helps trace how requests are routed, filtered, and processed.
logging.level.org.springframework.cloud.gateway=DEBUG

# Enable debug logging for the underlying Netty HTTP client used by the gateway.
# Useful for inspecting low-level HTTP request and response details.
logging.level.reactor.netty.http.client=DEBUG

eureka.instance.prefer-ip-address=true

spring.main.web-application-type=reactive
#-------------
# Define route for usermanagement-service
spring.cloud.gateway.routes[0].id=usermanagement-service
 
# Send matching requests to Eureka-registered service named usermanagement-service
spring.cloud.gateway.routes[0].uri=lb://usermanagement-service
 
# Match both /api/users/** and /api/auth/** to forward to the usermanagement-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**,/api/auth/**
#---------------
# Define route for travel-package-management-service
spring.cloud.gateway.routes[1].id=travel-package-management
 
# Send matching requests to Eureka-registered service named travel-package-management-service
spring.cloud.gateway.routes[1].uri=lb://travel-package-management
 
# Match both /api/users/** and /api/auth/** to forward to the travel-package-management-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/packages/**


# New route for Ratings and Review service
spring.cloud.gateway.routes[2].id=RatingsAndReview
spring.cloud.gateway.routes[2].uri=lb://RatingsAndReview
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/reviews/**,/api/agent-responses/**

# New route for Travel Insurance Service
spring.cloud.gateway.routes[3].id=TravelInsuranceService
spring.cloud.gateway.routes[3].uri=lb://TravelInsuranceService
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/insurance/**,/api/assistance/**


# New route for TravelBooking_PaymentModule
# Route to Booking service
spring.cloud.gateway.routes[4].id=TravelBooking_PaymentModule
spring.cloud.gateway.routes[4].uri=lb://TravelBooking_PaymentModule

spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**,/api/payments/**




#CORS Config for Angular App
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=http://localhost:4200
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowCredentials=true

